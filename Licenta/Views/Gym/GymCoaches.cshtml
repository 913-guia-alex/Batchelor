@using Licenta.Models

@{
    ViewBag.Title = "GymCoaches";
}


@functions {
    // Helper function to check if the coach's photo is available
    public bool HasPhoto(byte[] photo)
    {
        return photo != null && photo.Length > 0;
    }
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />

<style>
    .container {
        max-width: 1200px;
    }

    .gym-card {
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
        display: flex;
        flex-direction: column;
    }

        .gym-card h3 {
            font-size: 24px;
            margin-bottom: 10px;
        }

        .gym-card p {
            margin: 5px 0;
            font-size: 16px;
        }

        .gym-card span {
            font-size: 18px;
            font-weight: bold;
            color: #007bff;
        }

    .menu-items {
        width: 170px;
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 1rem 1.5rem; /* Adjusted padding */
        background-color: white;
        border: none;
        font-size: 1.1rem;
        cursor: pointer;
        border-radius: 13px !important; /* Remove button border-radius for a rectangular shape */
    }

    .menu-items {
        width: auto; /* Adjust width as needed */
        height: auto;
        text-align: center;
        margin: 20px auto; /* Center the button horizontally and add space around it */
        background-color: #007bff; /* Button background color */
        color: #ffffff; /* Button text color */
        border: none;
        font-size: 1.1rem;
        cursor: pointer;
        border-radius: 13px; /* Apply border-radius for a rounded shape */
        padding: 15px; /* Adjust padding as needed */
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Add box shadow */
        transition: background-color 0.3s ease; /* Smooth transition for background color */
    }

        .menu-items:hover {
            background-color: #0056b3; /* Change background color on hover */
        }

    .gym-coaches {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
    }

    .coach-card {
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        padding: 20px;
        margin-bottom: 20px;
        width: calc(50% - 20px);
    }

        .coach-card h3 {
            font-size: 20px;
            margin-bottom: 10px;
        }

        .coach-card img {
            border-radius: 50%;
        }

        .coach-card p {
            margin-bottom: 5px;
        }

    /* Slide menu styles */
    .slide-menu {
        position: fixed;
        top: 50px;
        left: 0;
        width: 180px;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.9);
        color: #000000;
        padding: 20px;
        box-sizing: border-box;
        transition: transform 0.3s ease-in-out, left 0.3s ease-in-out; /* Add left transition */
        z-index: 1000;
        transform: translateX(-250px); /* Initially hidden */
    }

        .slide-menu ul {
            list-style: none;
            padding: 0;
            margin: 0; /* Remove default margin */
        }

            .slide-menu ul li {
                margin-bottom: 10px; /* Adjust the margin as needed */
                padding-left: 0; /* Remove padding from the left */
                border-bottom: 1px solid #ffffff; /* Add bottom border */
            }

                .slide-menu ul li:last-child {
                    border-bottom: none; /* Remove border from the last item */
                }

                .slide-menu ul li a {
                    cursor: pointer;
                    display: block; /* Ensure the whole area is clickable */
                    padding: 10px; /* Add padding to the clickable area */
                    border-radius: 15px; /* Optional: Add some border radius for better aesthetics */
                    color: #ffffff; /* Change text color to white */
                }

        .slide-menu.show {
            transform: translateX(0); /* Slide in when shown */
        }

    .menu-toggle {
        position: fixed;
        top: 20px;
        left: 30px;
        cursor: pointer;
        z-index: 1100;
        color: #fff;
        font-size: 24px;
    }

        .menu-toggle i {
            transition: transform 0.3s ease-in-out;
        }

        .menu-toggle.show i {
            transform: rotate(180deg); /* Rotate icon when menu shown */
        }







    /* Modal styles */
    .modal-container {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        align-items: center;
        justify-content: center;
        z-index: 1;
    }

    .modal-content {
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        max-width: 400px;
        width: 100%;
        padding: 20px;
        text-align: center;
    }

    .button-container {
        display: flex;
        justify-content: space-around;
    }

    .button {
        padding: 10px 20px;
        font-size: 16px;
        text-align: center;
        text-decoration: none;
        border-radius: 5px;
        cursor: pointer;
    }
        /* Add hover animations to the buttons */
        .button:hover {
            transform: scale(1.05); /* Scale the button slightly on hover */
            transition: transform 0.3s ease;
        }


    .cancel-button {
        background-color: #ccc;
        color: #535353;
    }

        .cancel-button:hover {
            background-color: #bbb; /* Darken the background color on hover */
        }

    .delete-button {
        background-color: #e74c3c;
        color: #fff;
    }

        .delete-button:hover {
            background-color: #c0392b; /* Darken the background color on hover */
        }
</style>


<div class="container">
    <h2 style="text-align: center; font-size: 32px; padding-top: 30px;">Gym Coaches</h2>

    <div class="menu-toggle" onclick="toggleSlideMenu()">
        <i class="fas fa-bars"></i>
    </div>


    <!-- Slide menu -->
    <div class="slide-menu" id="slideMenu">
        <ul>
            <!-- Add menu items as needed -->
            <li><a href="/Authenticate/Login"><i class="fas fa-sign-out-alt"></i> Logout</a></li>
            <li><a href="/Class/GymClasses/@((int)ViewBag.Gym.idg)"><i class="fas fa-class"></i> Classes</a></li>
            <li><a href="/Review/GymReviews/@((int)ViewBag.Gym.idg)"><i class="fas fa-star"></i> Review</a></li>


        </ul>
    </div>

    @if (ViewBag.Coach != null && ((List<Coach>)ViewBag.Coach).Any())
    {
        <div class="gym-coaches">
            @foreach (var coach in (List<Coach>)ViewBag.Coach)
            {

                <div class="coach-card">
                    <h3>@coach.name</h3>
                    @if (HasPhoto(coach.photo))
                    {
                        <div>
                            <!-- Displaying coach photo -->
                            <img src="data:image;base64,@Convert.ToBase64String(coach.photo)" alt="Coach Photo" width="100" height="100" />
                        </div>
                    }
                    <p><strong>Age:</strong> @coach.age</p>
                    <p><strong>Gender:</strong> @coach.gender</p>
                    <p><strong>Trainer Type:</strong> @coach.trainerType</p>
                    <p><strong>Phone Number:</strong> @coach.phoneNumber</p>
                    <p><strong>Email:</strong> @coach.email</p>
                    <a href="/Coach/UpdateCoachView?id=@coach.idco"><i class="fas fa-exclamation-circle"></i></a>
                    <button class="btn btn-danger" onclick="showDeleteConfirmation('@coach.idco')"><i class="fas fa-trash-alt"></i></button>
                </div>
            }
        </div>
    }
    else
    {
        <p style="text-align: center; font-size: 20px; color: #555; line-height: 1.5;">Hey there! Looks like you currently do not have any coaches at your gyms... No worries, let's fix that! Click the button below to explore and add some coaches to your gym.</p>
    }

    <button class="menu-items" onclick="redirectToAddCoach()">
        <i class="fas fa-user-plus"></i> Add New Coach
    </button>

    @{
        if (ViewBag.GymId == null)
        {
            <p>ViewBag.GymId is null</p>
        }
        else
        {
            <p>ViewBag.GymId: @ViewBag.GymId</p>
        }
    }

    @if (ViewBag.GymId != null)
    {
        <a href="@Url.Action("AddSpecificClass", "Class", new { idg = ViewBag.GymId })">Add Specific Class</a>
    }

    <button class="menu-items" onclick="redirectToClasses()">
        <i class="fas fa-user-plus"></i> Add New Classes
    </button>






    <!-- Delete Confirmation Modal -->
    <div id="deleteModal" class="modal-container">
        <div class="modal-content">
            <h2>Delete Confirmation</h2>
            <p class="confirmation-message">
                Are you sure you want to delete this coach?
            </p>
            <div class="button-container">
                <button id="cancelDeleteBtn" class="button cancel-button">
                    Cancel
                </button>
                <button id="confirmDeleteBtn" class="button delete-button">
                    Delete
                </button>
            </div>
        </div>
    </div>

</div>


<script>
    // Function to toggle the slide menu
    function toggleSlideMenu() {
        var slideMenu = document.getElementById("slideMenu");
        slideMenu.classList.toggle("show");
    }

    function handleButtonClick(url) {
        window.location.href = url;
    }

    // Function to handle button click and redirect to add coach page
    function redirectToAddCoach() {
        var gymId = "@ViewBag.GymId"; // Assuming you set ViewBag.GymId in the controller
        window.location.href = "/Coach/AddCoach?gymId=" + gymId;
    }

        function redirectToClasses() {
        var gymId = "@ViewBag.GymId"; // Assuming you set ViewBag.GymId in the controller
        window.location.href = "/Class/AddSpecificClass?idg=" + gymId;
    }

    function showDeleteConfirmation(coachId) {
        const modal = document.getElementById('deleteModal');
        modal.style.display = 'flex';
        const confirmDeleteBtn = document.getElementById('confirmDeleteBtn');
        confirmDeleteBtn.onclick = function () {
            deleteCoach(coachId);
            hideModal('deleteModal');
        }
        const cancelDeleteBtn = document.getElementById('cancelDeleteBtn');
        cancelDeleteBtn.onclick = function () {
            hideModal('deleteModal');
        }
    }

    function deleteCoach(coachId) {
        $.ajax({
            type: "POST",
            url: "/Coach/DeleteCoach",
            data: { id: coachId },
            success: function () {
                // Refresh the coach list (replace with your actual refresh logic)
                location.reload();
            }
        });
    }

    function hideModal(modalId) {
        const modal = document.getElementById(modalId);
        modal.style.display = 'none';
    }



</script>

